include /system/_components/index

doctype

html(lang='pt')
	head
		if site.title && site.description
			title #{site.title} â€“ #{site.description}
		else
			title #{site.title}
		meta(charset='utf-8')
		meta(name='viewport', content='width=device-width, initial-scale=1')
		link(href='/main.css', rel='stylesheet')

	body

		+title-bar().-absolute
		!= yield

		//- +nav()
		+footer()

		script(src='//unpkg.com/feather-icons/dist/feather.min.js')
		script.
			feather.replace()

		script(src='//cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.6/p5.min.js')
		script(src='//cdnjs.cloudflare.com/ajax/libs/p5.js/0.5.6/addons/p5.dom.min.js')
		script.
			var locs = [];

			function setup() {
				var canvas = createCanvas(windowWidth, (windowHeight*0.8));
				canvas.parent('sketch')

				var res = 20;
				var countX = ceil(width / res) + 1;
				var countY = ceil(height / res) + 1;

				for (var j = 0; j < countY; j++) {
					for (var i = 0; i < countX; i++) {
						locs.push(new p5.Vector(res * i, res * j));
					}
				}

				noFill();
				stroke(220, 102, 102);
			}

			function draw() {
				background(18, 18, 19);
				for (var i = locs.length - 1; i >= 0; i--) {
					var h = calcVec(locs[i].x - mouseX, locs[i].y - mouseY);
					line(
						locs[i].x,
						locs[i].y,
						locs[i].x + 15 * cos(h.heading()),
						locs[i].y + 15 * sin(h.heading())
					);
				}
			}

			function calcVec(x, y) {
				return new p5.Vector(y - x, -x - y);
			}

		//- [TODO]: resize canvas on resize window

		script(src='/autosize.min.js')
		script.
			var ta = document.querySelector('textarea');
			ta.addEventListener('focus', function(){
				autosize(ta);
			});

			var ta = document.querySelector('textarea');
			ta.style.display = 'none';
			autosize(ta);
			ta.style.display = '';

			autosize.update(ta);
